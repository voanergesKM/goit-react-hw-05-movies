{"version":3,"file":"static/js/658.9176c412.chunk.js","mappings":"+OAEaA,EAAaC,EAAAA,GAAAA,GAAH,iKAQVC,EAAaD,EAAAA,GAAAA,GAAH,8PAaVE,EAAQF,EAAAA,GAAAA,IAAH,gEAKLG,EAAcH,EAAAA,GAAAA,EAAH,6E,6BCiBxB,EAvCa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBC,OAAOJ,IACxBK,MAAK,gBAAGP,EAAH,EAAGA,KAAH,OAAcC,EAAQD,EAAtB,IACLQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,IAEgB,IAAhBF,EAAKY,QAEL,SAAC,KAAD,uEAKF,SAAClB,EAAD,UACGM,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,UAAlC,OACR,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAM,QACNC,OAAO,QACPC,QAAQ,UAEV,UAACxB,EAAD,YACE,kCADF,IACiBkB,MAEjB,UAAClB,EAAD,YACE,sCADF,IACqBmB,OAZNH,EADT,KAmBf,C","sources":["components/Cast/FilmsCast.styled.js","components/Cast/FilmsCast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 220px);\n    gap: 12px;\n  }\n`;\n\nexport const StyledItem = styled.li`\n  padding: 16px;\n  align-items: center;\n  text-align: center;\n  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\n\n  @media screen and (max-width: 767px) {\n    :not(:last-child) {\n      margin-bottom: 16px;\n    }\n  }\n`;\n\nexport const Photo = styled.img`\n  margin-bottom: 8px;\n  width: 100px;\n`;\n\nexport const Description = styled.p`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Photo, StyledItem, StyledList, Description } from './FilmsCast.styled';\nimport { getMovieCreditsById } from 'components/TheMoviesApi/MoviesAPI';\nimport { Title } from 'components/PageTitle/Titles';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCreditsById(Number(movieId))\n      .then(({ cast }) => setCast(cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return (\n      <Title>Sorry, we don't have any cast information at the moment</Title>\n    );\n  }\n\n  return (\n    <StyledList>\n      {cast.map(({ credit_id, profile_path, name, character }) => (\n        <StyledItem key={credit_id}>\n          <Photo\n            src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n            alt={name}\n            width=\"100px\"\n            height=\"150px\"\n            loading=\"lazy\"\n          />\n          <Description>\n            <b>Actor:</b> {name}\n          </Description>\n          <Description>\n            <b>Character:</b> {character}\n          </Description>\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};\n\nexport default Cast;\n"],"names":["StyledList","styled","StyledItem","Photo","Description","useState","cast","setCast","movieId","useParams","useEffect","getMovieCreditsById","Number","then","catch","error","console","log","length","map","credit_id","profile_path","name","character","src","alt","width","height","loading"],"sourceRoot":""}