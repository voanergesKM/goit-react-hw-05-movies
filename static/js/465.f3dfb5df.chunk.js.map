{"version":3,"file":"static/js/465.f3dfb5df.chunk.js","mappings":"wRAEaA,EAAoBC,EAAAA,GAAAA,IAAH,mRAejBC,EAAqBD,EAAAA,GAAAA,IAAH,uGAMlBE,EAASF,EAAAA,GAAAA,IAAH,wH,SCbNG,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,WAAYC,EACpDL,EADoDK,SAAUC,EAC9DN,EAD8DM,OAE1DC,EAAY,GAIlB,OAFAD,EAAOE,SAAQ,gBAAGC,EAAH,EAAGA,KAAH,OAAcF,EAAUG,KAAKD,EAA7B,KAGb,UAACd,EAAD,YACE,SAACG,EAAD,CACEa,IAAG,UAZU,mCAYV,OAAoBV,GACvBW,IAAKV,EACLW,MAAM,QACNC,OAAO,UAET,UAACjB,EAAD,YACE,SAAC,KAAD,CAAWkB,KAAI,UAAKb,EAAL,aAAeC,EAAaa,MAAM,EAAG,GAArC,QACf,SAAC,KAAD,CAAMD,KAAM,cAAZ,UACE,4BAAOE,OAAOC,SAASd,GAAvB,UAEF,SAAC,KAAD,CAAcW,KAAM,cACpB,SAAC,KAAD,CAAMA,KAAMV,KACZ,SAAC,KAAD,CAAcU,KAAM,YACpB,SAAC,KAAD,CAAMA,KAAMR,EAAUY,KAAK,aAIlC,ECnCYC,EAAoBxB,EAAAA,GAAAA,IAAH,+IAMjByB,EAAoBzB,EAAAA,GAAAA,GAAH,gF,UCDxB0B,EAAW,CACf,CAAEC,KAAM,OAAQR,KAAM,QACtB,CAAEQ,KAAM,UAAWR,KAAM,WACzB,CAAEQ,KAAM,UAAWR,KAAM,cAGdS,EAAa,WACxB,OACE,UAACJ,EAAD,YACE,SAAC,KAAD,CAAOL,KAAM,2BACb,SAACM,EAAD,UACGC,EAASG,KAAI,gBAAGF,EAAH,EAAGA,KAAMR,EAAT,EAASA,KAAT,OACZ,yBACE,SAAC,IAAD,CAASW,GAAIH,EAAMR,KAAMA,KADlBQ,EADG,OAMhB,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QAIP,ECYD,EAhCqB,WAAO,IAAD,IACzB,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAQxB,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBrB,OAAOe,IACxBO,KAAKR,GACLS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,KAGF,6BACE,SAAC,IAAD,CACEN,GAAE,oBAAEQ,EAASU,QAAQC,aAAnB,aAAE,EAAwBC,YAA1B,QAAkC,IACpC/B,KAAM,UACNgC,MAAM,SAAC,MAAD,MAGPjB,GACC,SAAC/B,EAAD,CAAaC,MAAO8B,KAEpB,SAAC,KAAD,8DAKF,SAACN,EAAD,MAGL,C","sources":["components/Description/FilmDescription.styled.js","components/Description/FilmDescription.jsx","components/AdditionalInf/AdditionalInf.styled.js","components/AdditionalInf/AdditionalInf.jsx","pages/MovieDetails/Details.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DescriptionStyled = styled.div`\n  margin-bottom: 8px;\n  padding: 16px;\n\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    padding: 32px;\n\n    gap: 24px;\n  }\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n`;\n\nexport const Poster = styled.img`\n  max-width: 320px;\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: 16px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { DetailsTitle, MainTitle, Text } from 'components/PageTitle/Titles';\nimport {\n  DescriptionWrapper,\n  Poster,\n  DescriptionStyled,\n} from './FilmDescription.styled';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const Description = ({ movie }) => {\n  const { poster_path, title, release_date, popularity, overview, genres } =\n    movie;\n  const genreList = [];\n\n  genres.forEach(({ name }) => genreList.push(name));\n\n  return (\n    <DescriptionStyled>\n      <Poster\n        src={`${BASE_IMG_URL}${poster_path}`}\n        alt={title}\n        width=\"240px\"\n        height=\"auto\"\n      />\n      <DescriptionWrapper>\n        <MainTitle text={`${title} (${release_date.slice(0, 4)})`} />\n        <Text text={'User score:'}>\n          <span>{Number.parseInt(popularity)}%</span>\n        </Text>\n        <DetailsTitle text={'Overview'} />\n        <Text text={overview} />\n        <DetailsTitle text={'Genres'} />\n        <Text text={genreList.join(', ')} />\n      </DescriptionWrapper>\n    </DescriptionStyled>\n  );\n};\n\nDescription.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const AdditionalWrapper = styled.div`\n  padding: 16px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`;\n\nexport const AdditionaNavlList = styled.ul`\n  margin-bottom: 24px;\n  display: flex;\n  gap: 16px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { NavLink } from 'components/Link/NavigateLink';\nimport { Title } from 'components/PageTitle/Titles';\nimport { AdditionalWrapper, AdditionaNavlList } from './AdditionalInf.styled';\nimport { Suspense } from 'react';\nimport { Loader } from 'components/Loader/PageLoader';\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Rewievs' },\n  { href: 'posters', text: 'Backdrops' },\n];\n\nexport const Additional = () => {\n  return (\n    <AdditionalWrapper>\n      <Title text={'Aditional information'} />\n      <AdditionaNavlList>\n        {navItems.map(({ href, text }) => (\n          <li key={href}>\n            <NavLink to={href} text={text} />\n          </li>\n        ))}\n      </AdditionaNavlList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </AdditionalWrapper>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { getFilmsDetailsById } from 'components/TheMoviesApi/MoviesAPI';\nimport { Link } from 'components/Link/NavigateLink';\nimport { DetailsTitle } from 'components/PageTitle/Titles';\nimport { Description } from 'components/Description/FilmDescription';\nimport { Additional } from 'components/AdditionalInf/AdditionalInf';\n\nconst MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useRef(useLocation());\n\n  useEffect(() => {\n    getFilmsDetailsById(Number(movieId))\n      .then(setFilmDetails)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <main>\n      <Link\n        to={location.current.state?.from ?? '/'}\n        text={'Go back'}\n        icon={<BiArrowBack />}\n      />\n\n      {filmDetails ? (\n        <Description movie={filmDetails} />\n      ) : (\n        <DetailsTitle>\n          We don't have any information about this movie\n        </DetailsTitle>\n      )}\n\n      <Additional />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["DescriptionStyled","styled","DescriptionWrapper","Poster","Description","movie","poster_path","title","release_date","popularity","overview","genres","genreList","forEach","name","push","src","alt","width","height","text","slice","Number","parseInt","join","AdditionalWrapper","AdditionaNavlList","navItems","href","Additional","map","to","Suspense","fallback","useState","filmDetails","setFilmDetails","movieId","useParams","location","useRef","useLocation","useEffect","getFilmsDetailsById","then","catch","error","console","log","current","state","from","icon"],"sourceRoot":""}